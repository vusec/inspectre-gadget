uuid;name;address;n_instr;n_dependent_loads;n_branches;contains_spec_stop;pc;reg;expr;branches;constraints;aliases;requirements;bbls;controlled;uncontrolled;unmodified;aliasing;rax_reg;rax_expr;rax_control;rax_branches;rax_constraints;rax_requirements;rax_range;rbx_reg;rbx_expr;rbx_control;rbx_branches;rbx_constraints;rbx_requirements;rbx_range;rcx_reg;rcx_expr;rcx_control;rcx_branches;rcx_constraints;rcx_requirements;rcx_range;rdx_reg;rdx_expr;rdx_control;rdx_branches;rdx_constraints;rdx_requirements;rdx_range;rsi_reg;rsi_expr;rsi_control;rsi_branches;rsi_constraints;rsi_requirements;rsi_range;rdi_reg;rdi_expr;rdi_control;rdi_branches;rdi_constraints;rdi_requirements;rdi_range;rbp_reg;rbp_expr;rbp_control;rbp_branches;rbp_constraints;rbp_requirements;rbp_range;rsp_reg;rsp_expr;rsp_control;rsp_branches;rsp_constraints;rsp_requirements;rsp_range;r8_reg;r8_expr;r8_control;r8_branches;r8_constraints;r8_requirements;r8_range;r9_reg;r9_expr;r9_control;r9_branches;r9_constraints;r9_requirements;r9_range;r10_reg;r10_expr;r10_control;r10_branches;r10_constraints;r10_requirements;r10_range;r11_reg;r11_expr;r11_control;r11_branches;r11_constraints;r11_requirements;r11_range;r12_reg;r12_expr;r12_control;r12_branches;r12_constraints;r12_requirements;r12_range;r13_reg;r13_expr;r13_control;r13_branches;r13_constraints;r13_requirements;r13_range;r14_reg;r14_expr;r14_control;r14_branches;r14_constraints;r14_requirements;r14_range;r15_reg;r15_expr;r15_control;r15_branches;r15_constraints;r15_requirements;r15_range
c96213a7-2f3f-4f2f-8eb4-803a68d793b2;tfp_multiple_bb;0x4000000;7;0;3;False;0x400001b;rax;<BV64 rax>;[('0x4000007', <Bool rax != 0x0>, 'Not Taken'), ('0x4000009', <Bool True>, 'Taken'), ('0x400001b', <Bool True>, 'Taken')];[];[];regs: {<BV64 rax>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rax>}, indirect_regs: {};[67108864, 67108873, 67108884];['r8', 'r10', 'r11'];['rbp', 'rsp'];['rbx', 'rcx', 'rdx', 'rsi', 'rdi', 'r9', 'r12', 'r13', 'r14', 'r15'];[];rax;<BV64 rax>;TFPRegisterControlType.IS_TFP_REGISTER;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rax>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rax>}, indirect_regs: {};;rbx;<BV64 rbx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rbx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbx>}, indirect_regs: {};;rcx;<BV64 rcx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rcx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rcx>}, indirect_regs: {};;rdx;<BV64 rdx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rdx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdx>}, indirect_regs: {};;rsi;<BV64 rsi>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rsi>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rsi>}, indirect_regs: {};;rdi;<BV64 rdi>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rdi>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdi>}, indirect_regs: {};;rbp;<BV64 rbp>;TFPRegisterControlType.UNCONTROLLED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rbp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbp>}, indirect_regs: {};;rsp;<BV64 rsp>;TFPRegisterControlType.UNCONTROLLED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rsp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rsp>}, indirect_regs: {};;r8;<BV64 LOAD_64[<BV64 rdi>]_20>;TFPRegisterControlType.CONTROLLED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r9;<BV64 r9>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 r9>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r9>}, indirect_regs: {};;r10;<BV64 LOAD_64[<BV64 rdi + 0xfffffffffffffff0>]_21>;TFPRegisterControlType.CONTROLLED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0xfffffffffffffff0>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0xfffffffffffffff0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r11;<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0xfffffffffffffff0>]_21>]_22>;TFPRegisterControlType.CONTROLLED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0xfffffffffffffff0>, <BV64 LOAD_64[<BV64 rdi + 0xfffffffffffffff0>]_21>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0xfffffffffffffff0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r12;<BV64 r12>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 r12>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r12>}, indirect_regs: {};;r13;<BV64 r13>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 r13>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r13>}, indirect_regs: {};;r14;<BV64 r14>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 r14>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r14>}, indirect_regs: {};;r15;<BV64 r15>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax != 0x0>, 'Not Taken')];[];regs: {<BV64 r15>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r15>}, indirect_regs: {};
52cae7c2-0c6f-4dc0-a835-177b84e795cc;tfp_multiple_bb;0x4000000;5;0;2;False;0x4000012;rax;<BV64 rax>;[('0x4000007', <Bool rax == 0x0>, 'Taken'), ('0x4000012', <Bool True>, 'Taken')];[];[];regs: {<BV64 rax>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rax>}, indirect_regs: {};[67108864, 67108875];['r8', 'r10'];['rbp', 'rsp'];['rbx', 'rcx', 'rdx', 'rsi', 'rdi', 'r9', 'r11', 'r12', 'r13', 'r14', 'r15'];[];rax;<BV64 rax>;TFPRegisterControlType.IS_TFP_REGISTER;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rax>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rax>}, indirect_regs: {};;rbx;<BV64 rbx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rbx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbx>}, indirect_regs: {};;rcx;<BV64 rcx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rcx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rcx>}, indirect_regs: {};;rdx;<BV64 rdx>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rdx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdx>}, indirect_regs: {};;rsi;<BV64 rsi>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rsi>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rsi>}, indirect_regs: {};;rdi;<BV64 rdi>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rdi>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdi>}, indirect_regs: {};;rbp;<BV64 rbp>;TFPRegisterControlType.UNCONTROLLED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rbp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbp>}, indirect_regs: {};;rsp;<BV64 rsp>;TFPRegisterControlType.UNCONTROLLED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rsp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rsp>}, indirect_regs: {};;r8;<BV64 LOAD_64[<BV64 rdi>]_20>;TFPRegisterControlType.CONTROLLED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r9;<BV64 r9>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r9>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r9>}, indirect_regs: {};;r10;<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi>]_20 + 0xffffffff81000000>]_23>;TFPRegisterControlType.CONTROLLED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi>, <BV64 LOAD_64[<BV64 rdi>]_20 + 0xffffffff81000000>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r11;<BV64 r11>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r11>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r11>}, indirect_regs: {};;r12;<BV64 r12>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r12>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r12>}, indirect_regs: {};;r13;<BV64 r13>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r13>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r13>}, indirect_regs: {};;r14;<BV64 r14>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r14>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r14>}, indirect_regs: {};;r15;<BV64 r15>;TFPRegisterControlType.UNMODIFIED;[('0x4000007', <Bool rax == 0x0>, 'Taken')];[];regs: {<BV64 r15>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r15>}, indirect_regs: {};
6ece1c7b-06d1-444c-ba28-8688912fee6e;tfp_simple;0x4000000;7;2;1;False;0x4000015;rax;<BV64 LOAD_64[<BV64 rcx + LOAD_64[<BV64 rdi>]_20>]_21[61:0] .. 0>;[('0x4000015', <Bool True>, 'Taken')];[];[];regs: {<BV64 rdi>, <BV64 rcx>}, mem: {<BV64 rdi>, <BV64 rcx + LOAD_64[<BV64 rdi>]_20>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0'], <BV64 rcx>: []};[67108864];['rcx', 'rsi', 'r12'];['rbp', 'rsp', 'r8'];['rbx', 'rdx', 'rdi', 'r9', 'r10', 'r11', 'r13', 'r14', 'r15'];[];rax;<BV64 LOAD_64[<BV64 rcx + LOAD_64[<BV64 rdi>]_20>]_21[61:0] .. 0>;TFPRegisterControlType.IS_TFP_REGISTER;[];[];regs: {<BV64 rdi>, <BV64 rcx>}, mem: {<BV64 rdi>, <BV64 rcx + LOAD_64[<BV64 rdi>]_20>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0'], <BV64 rcx>: []};;rbx;<BV64 rbx>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 rbx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbx>}, indirect_regs: {};;rcx;<BV64 LOAD_64[<BV64 rdi + 0x20>]_22>;TFPRegisterControlType.CONTROLLED;[];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0x20>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x20']};(0x0,0xffffffffffffffff, 0x1) Exact: True;rdx;<BV64 rdx>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 rdx>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdx>}, indirect_regs: {};;rsi;<BV64 LOAD_64[<BV64 rdi>]_20>;TFPRegisterControlType.CONTROLLED;[];[];regs: {<BV64 rdi>}, mem: {<BV64 rdi>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;rdi;<BV64 rdi>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 rdi>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rdi>}, indirect_regs: {};;rbp;<BV64 rbp>;TFPRegisterControlType.UNCONTROLLED;[];[];regs: {<BV64 rbp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rbp>}, indirect_regs: {};;rsp;<BV64 rsp>;TFPRegisterControlType.UNCONTROLLED;[];[];regs: {<BV64 rsp>}, mem: set(), const_mem: set(), direct_regs: {<BV64 rsp>}, indirect_regs: {};;r8;<BV64 0x0>;TFPRegisterControlType.UNCONTROLLED;[];[];regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {};;r9;<BV64 r9>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r9>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r9>}, indirect_regs: {};;r10;<BV64 r10>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r10>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r10>}, indirect_regs: {};;r11;<BV64 r11>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r11>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r11>}, indirect_regs: {};;r12;<BV64 LOAD_64[<BV64 r8>]_23>;TFPRegisterControlType.CONTROLLED;[];[];regs: {<BV64 r8>}, mem: {<BV64 r8>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 r8>: ['0x0']};(0x0,0xffffffffffffffff, 0x1) Exact: True;r13;<BV64 r13>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r13>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r13>}, indirect_regs: {};;r14;<BV64 r14>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r14>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r14>}, indirect_regs: {};;r15;<BV64 r15>;TFPRegisterControlType.UNMODIFIED;[];[];regs: {<BV64 r15>}, mem: set(), const_mem: set(), direct_regs: {<BV64 r15>}, indirect_regs: {};
