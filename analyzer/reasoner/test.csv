name,address,pc,transmitter,transmission_expr,transmission_branches,transmission_constraints,transmission_requirements_regs,transmission_requirements_indirect_regs,transmission_requirements_direct_regs,transmission_requirements_mem,transmission_requirements_const_mem,transmission_range_min,transmission_range_max,transmission_range_window,transmission_range_stride,transmission_range_and_mask,transmission_range_or_mask,transmission_range_exact,transmission_range_w_branches_min,transmission_range_w_branches_max,transmission_range_w_branches_window,transmission_range_w_branches_stride,transmission_range_w_branches_and_mask,transmission_range_w_branches_or_mask,transmission_range_w_branches_exact,transmission_control,base_expr,base_branches,base_constraints,base_requirements_regs,base_requirements_indirect_regs,base_requirements_direct_regs,base_requirements_mem,base_requirements_const_mem,base_range_min,base_range_max,base_range_window,base_range_stride,base_range_and_mask,base_range_or_mask,base_range_exact,base_range_w_branches_min,base_range_w_branches_max,base_range_w_branches_window,base_range_w_branches_stride,base_range_w_branches_and_mask,base_range_w_branches_or_mask,base_range_w_branches_exact,base_control,transmitted_secret_expr,transmitted_secret_branches,transmitted_secret_constraints,transmitted_secret_requirements_regs,transmitted_secret_requirements_indirect_regs,transmitted_secret_requirements_direct_regs,transmitted_secret_requirements_mem,transmitted_secret_requirements_const_mem,transmitted_secret_range_min,transmitted_secret_range_max,transmitted_secret_range_window,transmitted_secret_range_stride,transmitted_secret_range_and_mask,transmitted_secret_range_or_mask,transmitted_secret_range_exact,transmitted_secret_range_w_branches_min,transmitted_secret_range_w_branches_max,transmitted_secret_range_w_branches_window,transmitted_secret_range_w_branches_stride,transmitted_secret_range_w_branches_and_mask,transmitted_secret_range_w_branches_or_mask,transmitted_secret_range_w_branches_exact,transmitted_secret_control,secret_address_expr,secret_address_branches,secret_address_constraints,secret_address_requirements_regs,secret_address_requirements_indirect_regs,secret_address_requirements_direct_regs,secret_address_requirements_mem,secret_address_requirements_const_mem,secret_address_range_min,secret_address_range_max,secret_address_range_window,secret_address_range_stride,secret_address_range_and_mask,secret_address_range_or_mask,secret_address_range_exact,secret_address_range_w_branches_min,secret_address_range_w_branches_max,secret_address_range_w_branches_window,secret_address_range_w_branches_stride,secret_address_range_w_branches_and_mask,secret_address_range_w_branches_or_mask,secret_address_range_w_branches_exact,secret_address_control,secret_val_expr,secret_val_branches,secret_val_constraints,secret_val_requirements_regs,secret_val_requirements_indirect_regs,secret_val_requirements_direct_regs,secret_val_requirements_mem,secret_val_requirements_const_mem,secret_val_range_min,secret_val_range_max,secret_val_range_window,secret_val_range_stride,secret_val_range_and_mask,secret_val_range_or_mask,secret_val_range_exact,secret_val_range_w_branches_min,secret_val_range_w_branches_max,secret_val_range_w_branches_window,secret_val_range_w_branches_stride,secret_val_range_w_branches_and_mask,secret_val_range_w_branches_or_mask,secret_val_range_w_branches_exact,secret_val_control,branches,branch_requirements,constraints,constraint_requirements,all_requirements,inferable_bits_spread_high,inferable_bits_spread_low,inferable_bits_spread_total,inferable_bits_n_inferable_bits,aliases,deps,base_control_w_constraints,base_control_w_branches_and_constraints,n_branches,base_size,transmitted_secret_size
ac6_seq_start,0xffffffff81aba1d0,0xffffffff81aba1ed,TransmitterType.LOAD,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,None,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,BaseControlType.NO_BASE,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 rdi + 0x70>,[],[],['<BV64 rdi>'],[],['<BV64 rdi>'],[],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,ControlType.UNKNOWN,"[{'addr': '0xffffffff81aba1e0', 'condition': '<Bool True>'}, {'addr': '0xffffffff810e0198', 'condition': '<Bool True>'}, {'addr': '0xffffffff820032c0', 'condition': '<Bool True>'}]","regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}",[],"regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}","regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70']}",63,0,64,64,['<Bool True>'],None,BaseControlType.NO_BASE,BaseControlType.NO_BASE,3,64,64
ac6_seq_start,0xffffffff81aba1d0,0xffffffff81aba1f0,TransmitterType.STORE,<BV64 0x10 + LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 0x10>,[],[],[],[],[],[],[],16,16,0,1,None,None,True,16,16,0,1,None,None,True,BaseControlType.CONSTANT_BASE,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 rdi + 0x70>,[],[],['<BV64 rdi>'],[],['<BV64 rdi>'],[],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,ControlType.UNKNOWN,"[{'addr': '0xffffffff81aba1e0', 'condition': '<Bool True>'}, {'addr': '0xffffffff810e0198', 'condition': '<Bool True>'}, {'addr': '0xffffffff820032c0', 'condition': '<Bool True>'}]","regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}",[],"regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}","regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70']}",63,0,64,64,['<Bool True>'],None,BaseControlType.CONSTANT_BASE,BaseControlType.CONSTANT_BASE,3,64,64
ac6_seq_start,0xffffffff81aba1d0,0xffffffff81aba1f8,TransmitterType.LOAD,<BV64 0x90 + LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],"['<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>', '<BV64 rdi + 0x70>']",[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 0x90>,[],[],[],[],[],[],[],144,144,0,1,None,None,True,144,144,0,1,None,None,True,BaseControlType.CONSTANT_BASE,<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],"['<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>', '<BV64 rdi + 0x70>']",[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34>,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,ControlType.UNKNOWN,"[{'addr': '0xffffffff81aba1e0', 'condition': '<Bool True>'}, {'addr': '0xffffffff810e0198', 'condition': '<Bool True>'}, {'addr': '0xffffffff820032c0', 'condition': '<Bool True>'}]","regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}",[],"regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}","regs: {<BV64 rdi>}, mem: {<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>, <BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70']}",63,0,64,64,['<Bool True>'],None,BaseControlType.CONSTANT_BASE,BaseControlType.CONSTANT_BASE,3,64,64
ac6_seq_start,0xffffffff81aba1d0,0xffffffff81aba20a,TransmitterType.STORE,<BV64 0x8 + LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 0x8>,[],[],[],[],[],[],[],8,8,0,1,None,None,True,8,8,0,1,None,None,True,BaseControlType.CONSTANT_BASE,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],['<BV64 rdi + 0x70>'],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 rdi + 0x70>,[],[],['<BV64 rdi>'],[],['<BV64 rdi>'],[],[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,True,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,ControlType.UNKNOWN,"[{'addr': '0xffffffff81aba1e0', 'condition': '<Bool True>'}, {'addr': '0xffffffff810e0198', 'condition': '<Bool True>'}, {'addr': '0xffffffff820032c0', 'condition': '<Bool True>'}]","regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}",[],"regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}","regs: {<BV64 rdi>}, mem: {<BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70']}",63,0,64,64,['<Bool True>'],None,BaseControlType.CONSTANT_BASE,BaseControlType.CONSTANT_BASE,3,64,64
ac6_seq_start,0xffffffff81aba1d0,0xffffffff81aba213,TransmitterType.LOAD,<BV64 0x288 + LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>,"['(18446744071590093329, <Bool LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90 != LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>)']",[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70', '0x70']""]",[],"['<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>', '<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>', '<BV64 rdi + 0x70>']",[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,False,ControlType.CONTROLLED,<BV64 0x288>,[],[],[],[],[],[],[],648,648,0,1,None,None,True,648,648,0,1,None,None,True,BaseControlType.CONSTANT_BASE,<BV64 LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>,"['(18446744071590093329, <Bool LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90 != LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>)']",[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],"['<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>', '<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>', '<BV64 rdi + 0x70>']",[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,False,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>,"['(18446744071590093329, <Bool LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90 != LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>)']",[],['<BV64 rdi>'],"[""<BV64 rdi>: ['0x70']""]",[],"['<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>', '<BV64 rdi + 0x70>']",[],0,18446744073709551615,18446744073709551615,1,None,None,True,0,18446744073709551615,18446744073709551615,1,None,None,False,ControlType.CONTROLLED,<BV64 LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>,[],[],[],[],[],[],[],0,0,0,None,None,None,False,0,0,0,None,None,None,False,ControlType.UNKNOWN,"[{'addr': '0xffffffff81aba1e0', 'condition': '<Bool True>'}, {'addr': '0xffffffff810e0198', 'condition': '<Bool True>'}, {'addr': '0xffffffff820032c0', 'condition': '<Bool True>'}, {'addr': '0xffffffff81aba211', 'condition': '<Bool LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90 != LOAD_64[<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>]_36>'}]","regs: {<BV64 rdi>}, mem: {<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>, <BV64 LOAD_64[<BV64 rdi + 0x70>]_33>, <BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70']}",[],"regs: set(), mem: set(), const_mem: set(), direct_regs: set(), indirect_regs: {}","regs: {<BV64 rdi>}, mem: {<BV64 LOAD_64[<BV64 LOAD_64[<BV64 rdi + 0x70>]_33>]_34 + 0x90>, <BV64 LOAD_64[<BV64 rdi + 0x70>]_33>, <BV64 rdi + 0x70>}, const_mem: set(), direct_regs: set(), indirect_regs: {<BV64 rdi>: ['0x70', '0x70']}",63,0,64,64,['<Bool True>'],None,BaseControlType.CONSTANT_BASE,BaseControlType.CONSTANT_BASE,4, 64,64
