-- Query used for the paper (table 2).
--
-- Group all non-exploitable gadgets by the reason they are not exploitable.


SELECT transmitter, 'base_alias' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE base_has_indirect_secret_dependency = "True" GROUP BY transmitter
UNION ALL
SELECT transmitter, 'invalid_base' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%has_valid_base%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'invalid_secret_address' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%has_valid_secret_address%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'CMOVE alias' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%cmove_independent_from_secret%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'secret not inferable' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%secret_inferable%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'invalid transmission' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%secret_entropy_high%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'secret too big' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%max_secret_too_high%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'secret too small' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%secret_below_cache_granularity%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'contains speculation stop' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable="False" AND fail_reasons LIKE '%has_no_speculation_stop%' GROUP BY transmitter
UNION ALL
SELECT transmitter, 'TOTAL' as problem, COUNT(DISTINCT pc) FROM call_gadgets WHERE exploitable = "False" GROUP BY transmitter;