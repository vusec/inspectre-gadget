-- Query used for the paper (table 2).
--
-- Group all non-exploitable gadgets by the reason they are not exploitable.


SELECT transmitter, 'indirect base alias' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE base_has_indirect_secret_dependency = "True" 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable indirect base alias' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE base_has_indirect_secret_dependency = "True" 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'invalid base' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_valid_base%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable invalid base' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_valid_base%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'invalid secret address' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_valid_secret_address%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable invalid secret address' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_valid_secret_address%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'CMOVE alias' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%cmove_independent_from_secret%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable CMOVE alias' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%cmove_independent_from_secret%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'secret not inferable' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_inferable%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable secret not inferable' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_inferable%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'secret entropy too high' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_entropy_high%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable secret entropy too high' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_entropy_high%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'secret too big' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%max_secret_too_high%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable secret too big' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%max_secret_too_high%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'secret too small' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_below_cache_granularity%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable secret too small' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%secret_below_cache_granularity%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'contains speculation stop' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_no_speculation_stop%' 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'reachable contains speculation stop' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable="False" 
    AND fail_reasons LIKE '%has_no_speculation_stop%' 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'TOTAL' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable = "False" 
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter

UNION ALL

SELECT transmitter, 'TOTAL reachable' as problem, COUNT(DISTINCT pc) FROM all_gadgets 
    WHERE exploitable = "False" 
    AND name IN reachable
    AND (transmitter = "TransmitterType.LOAD" OR transmitter = "TransmitterType.STORE")
    AND NOT pc IN (SELECT pc FROM all_gadgets WHERE exploitable = 'True' AND  base_has_indirect_secret_dependency = "False")
GROUP BY transmitter    
;